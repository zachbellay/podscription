/* tslint:disable */
/* eslint-disable */
/**
 * NinjaAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PodcastEpisodeSearchResultOut,
  PodcastOut,
} from '../models';
import {
    PodcastEpisodeSearchResultOutFromJSON,
    PodcastEpisodeSearchResultOutToJSON,
    PodcastOutFromJSON,
    PodcastOutToJSON,
} from '../models';

export interface SearchEpisodesRequest {
    q: string;
}

export interface SearchPodcastsRequest {
    q: string;
}

/**
 * 
 */
export class SearchApi extends runtime.BaseAPI {

    /**
     * Search Podcasts
     */
    async searchEpisodesRaw(requestParameters: SearchEpisodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PodcastEpisodeSearchResultOut>>> {
        if (requestParameters.q === null || requestParameters.q === undefined) {
            throw new runtime.RequiredError('q','Required parameter requestParameters.q was null or undefined when calling searchEpisodes.');
        }

        const queryParameters: any = {};

        if (requestParameters.q !== undefined) {
            queryParameters['q'] = requestParameters.q;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/search/episodes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PodcastEpisodeSearchResultOutFromJSON));
    }

    /**
     * Search Podcasts
     */
    async searchEpisodes(requestParameters: SearchEpisodesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PodcastEpisodeSearchResultOut>> {
        const response = await this.searchEpisodesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Search Podcasts
     */
    async searchPodcastsRaw(requestParameters: SearchPodcastsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<PodcastOut>>> {
        if (requestParameters.q === null || requestParameters.q === undefined) {
            throw new runtime.RequiredError('q','Required parameter requestParameters.q was null or undefined when calling searchPodcasts.');
        }

        const queryParameters: any = {};

        if (requestParameters.q !== undefined) {
            queryParameters['q'] = requestParameters.q;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/search/podcasts`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(PodcastOutFromJSON));
    }

    /**
     * Search Podcasts
     */
    async searchPodcasts(requestParameters: SearchPodcastsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<PodcastOut>> {
        const response = await this.searchPodcastsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
