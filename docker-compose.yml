version: "3.9"

services:

  flower:
    build:
      context: .
      dockerfile: docker/celery-flower/Dockerfile
    environment:
      - DATABASE_NAME=${DJANGO_POSTGRES_DB}
      - DATABASE_USER=${DJANGO_POSTGRES_USER}
      - DATABASE_PASSWORD=${DJANGO_DATABASE_PASSWORD}
      - DATABASE_HOST=${DJANGO_DATABASE_HOST}
      - DATABASE_PORT=${DJANGO_DATABASE_PORT}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
      - celery-worker
    networks:
      - postgres
      - redis
      - celery-worker
    ports:
      - "5555:5555"
    # env_file:
      # - .env

  celery-worker:
    restart: always
    build:
      context: .
      dockerfile: docker/celery-worker/Dockerfile
    depends_on:
      - postgres
      - redis
    environment:
      - DJANGO_POSTGRES_USER=${DJANGO_POSTGRES_USER}
      - DJANGO_POSTGRES_DB=${DJANGO_POSTGRES_DB}
      - DJANGO_DATABASE_PASSWORD=${DJANGO_DATABASE_PASSWORD}
      - DJANGO_DATABASE_HOST=${DJANGO_DATABASE_HOST}
      - DJANGO_DATABASE_PORT=${DJANGO_DATABASE_PORT}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - REDIS_URL=redis://redis:6379/0
    networks:
      - postgres
      - redis
      - celery-worker
    # env_file:
    #   - .env

  celery-whisper-worker:
    restart: always
    build:
      context: .
      dockerfile: docker/celery-whisper-worker/Dockerfile
    depends_on:
      - postgres
      - redis
    environment:
      - DJANGO_POSTGRES_USER=${DJANGO_POSTGRES_USER}
      - DJANGO_POSTGRES_DB=${DJANGO_POSTGRES_DB}
      - DJANGO_DATABASE_PASSWORD=${DJANGO_DATABASE_PASSWORD}
      - DJANGO_DATABASE_HOST=${DJANGO_DATABASE_HOST}
      - DJANGO_DATABASE_PORT=${DJANGO_DATABASE_PORT}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - REDIS_URL=redis://redis:6379/0
    networks:
      - postgres
      - redis
      - celery-worker
    # env_file:
    #   - .env

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
    networks:
      - redis

      
  django:
    container_name: podscription_django
    restart: always
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    depends_on:
      - postgres
    environment:
      - DJANGO_POSTGRES_USER=${DJANGO_POSTGRES_USER}
      - DJANGO_POSTGRES_DB=${DJANGO_POSTGRES_DB}
      - DJANGO_DATABASE_PASSWORD=${DJANGO_DATABASE_PASSWORD}
      - DJANGO_DATABASE_HOST=${DJANGO_DATABASE_HOST}
      - DJANGO_DATABASE_PORT=${DJANGO_DATABASE_PORT}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - VITE_API_BASE_URI=${VITE_API_BASE_URI}
      - REDIS_URL=redis://redis:6379/0
    # env_file:
      # - .env.development
    networks:
      - postgres
      - redis
    ports:
      - "8888:8888"

  postgres:
    container_name: postgres
    build: 
      context: ./docker/postgres
    environment:
      POSTGRES_USER: ${DJANGO_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DJANGO_DATABASE_PASSWORD}
      POSTGRES_DB: ${DJANGO_POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - ./.data/postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
    # env_file:
    #   - .env

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - ./.data/pgadmin:/var/lib/pgadmin
    networks:
      - postgres
    depends_on:
      - postgres

    restart: unless-stopped
    # env_file:
    #   - .env

networks:
  postgres:
    driver: bridge
  redis:
    driver: bridge
  celery-worker:
    driver: bridge

volumes:
  postgres:

